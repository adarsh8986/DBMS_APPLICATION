<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:layout_margin="8dp"
    android:scrollbars="none"
    tools:context="urgroup.in.dbmssqlcompleteguide.button21">
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical">
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="DBMS - Data Backup"
            android:textAlignment="center"
            android:textColor="#000000"
            android:textSize="30dp" />
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Loss of Volatile Storage"
            android:textAlignment="center"
            android:textColor="#000000"
            android:textSize="30dp" />
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp"
            android:layout_weight="1"
            android:textColor="#008080"
            android:textSize="19dp"
            android:text="A volatile storage like RAM stores all the active logs, disk buffers, and related data. In addition, it stores all the transactions that are being currently executed. What happens if such a volatile storage crashes abruptly? It would obviously take away all the logs and active copies of the database. It makes recovery almost impossible, as everything that is required to recover the data is lost."
            />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp"
            android:layout_weight="1"
            android:textColor="#008080"
            android:textSize="19dp"
            android:text="Following techniques may be adopted in case of loss of volatile storage −"
            />

        <TableLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp">
            <TableRow>
                <TextView
                    android:layout_column="1"
                    android:text="•"
                    android:textSize="23dp"></TextView>
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_column="2"
                    android:text="We can have checkpoints at multiple stages so as to save the contents of the database periodically."
                    android:textColor="#008080"
                    android:textSize="19dp"></TextView></TableRow>
            <TableRow>
                <TextView
                    android:layout_column="1"
                    android:text="•"
                    android:textSize="23dp"></TextView>
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_column="2"
                    android:text="A state of active database in the volatile memory can be periodically dumped onto a stable storage, which may also contain logs and active transactions and buffer blocks."
                    android:textColor="#008080"
                    android:textSize="19dp"></TextView></TableRow>
            <TableRow>
                <TextView
                    android:layout_column="1"
                    android:text="•"
                    android:textSize="23dp"></TextView>
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_column="2"
                    android:text="dump can be marked on a log file, whenever the database contents are dumped from a non-volatile memory to a stable one."
                    android:textColor="#008080"
                    android:textSize="19dp"></TextView></TableRow>
        </TableLayout>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Recovery"
            android:textAlignment="center"
            android:textColor="#000000"
            android:textSize="30dp" />

        <TableLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp">
            <TableRow>
                <TextView
                    android:layout_column="1"
                    android:text="•"
                    android:textSize="23dp"></TextView>
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_column="2"
                    android:text="When the system recovers from a failure, it can restore the latest dump."
                    android:textColor="#008080"
                    android:textSize="19dp"></TextView></TableRow>

            <TableRow>
                <TextView
                    android:layout_column="1"
                    android:text="•"
                    android:textSize="23dp"></TextView>
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_column="2"
                    android:text="It can maintain a redo-list and an undo-list as checkpoints."
                    android:textColor="#008080"
                    android:textSize="19dp"></TextView></TableRow>

            <TableRow>
                <TextView
                    android:layout_column="1"
                    android:text="•"
                    android:textSize="23dp"></TextView>
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_column="2"
                    android:text="It can recover the system by consulting undo-redo lists to restore the state of all transactions up to the last checkpoint."
                    android:textColor="#008080"
                    android:textSize="19dp"></TextView></TableRow></TableLayout>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Database Backup and Recovery from Catastrophic Failure"
            android:textAlignment="center"
            android:textColor="#000000"
            android:textSize="30dp" />
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp"
            android:layout_weight="1"
            android:textColor="#008080"
            android:textSize="19dp"
            android:text="A catastrophic failure is one where a stable, secondary storage device gets corrupt. With the storage device, all the valuable data that is stored inside is lost. We have two different strategies to recover data from such a catastrophic failure −"
            />

        <TableLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp">
            <TableRow>
                <TextView
                    android:layout_column="1"
                    android:text="•"
                    android:textSize="23dp"></TextView>
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_column="2"
                    android:text="Here a backup copy of the database is stored at a remote location from where it can be restored in case of a catastrophe."
                    android:textColor="#008080"
                    android:textSize="19dp"></TextView></TableRow>

            <TableRow>
                <TextView
                    android:layout_column="1"
                    android:text="•"
                    android:textSize="23dp"></TextView>
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_column="2"
                    android:text="Alternatively, database backups can be taken on magnetic tapes and stored at a safer place. This backup can later be transferred onto a freshly installed database to bring it to the point of backup."
                    android:textColor="#008080"
                    android:textSize="19dp"></TextView></TableRow></TableLayout>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp"
            android:layout_weight="1"
            android:textColor="#008080"
            android:textSize="19dp"
            android:text="Grown-up databases are too bulky to be frequently backed up. In such cases, we have techniques where we can restore a database just by looking at its logs. So, all that we need to do here is to take a backup of all the logs at frequent intervals of time. The database can be backed up once a week, and the logs being very small can be backed up every day or as frequently as possible."
            />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Remote Backup"
            android:textAlignment="center"
            android:textColor="#000000"
            android:textSize="30dp" />
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp"
            android:layout_weight="1"
            android:textColor="#008080"
            android:textSize="19dp"
            android:text="Remote backup provides a sense of security in case the primary location where the database is located gets destroyed. Remote backup can be offline or real-time or online. In case it is offline, it is maintained manually."
            />
        <ImageView
            android:layout_width="wrap_content"
            android:layout_height="400dp"
            android:layout_marginTop="14dp"
            android:scaleType="fitXY"
            android:src="@drawable/remote_data_backup" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp"
            android:layout_weight="1"
            android:textColor="#008080"
            android:textSize="19dp"
            android:text="Online backup systems are more real-time and lifesavers for database administrators and investors. An online backup system is a mechanism where every bit of the real-time data is backed up simultaneously at two distant places. One of them is directly connected to the system and the other one is kept at a remote place as backup."
            />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="14dp"
            android:layout_weight="1"
            android:textColor="#008080"
            android:textSize="19dp"
            android:text="As soon as the primary database storage fails, the backup system senses the failure and switches the user system to the remote storage. Sometimes this is so instant that the users can’t even realize a failure."
            />



    </LinearLayout>
</ScrollView>
